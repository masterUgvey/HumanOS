import sqlite3
import logging
from datetime import datetime, timedelta
from telegram import Bot
import asyncio
import os
from dotenv import load_dotenv

load_dotenv()


class ReminderSystem:
    def __init__(self, db_path='quests.db'):
        self.db_path = db_path
        self.bot = Bot(token=os.getenv('BOT_TOKEN'))

    async def check_deadlines(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–µ–¥–ª–∞–π–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()

        now = datetime.now()

        # –ù–∞—Ö–æ–¥–∏–º –∫–≤–µ—Å—Ç—ã —Å –¥–µ–¥–ª–∞–π–Ω–∞–º–∏ –∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã
        cursor.execute('''
            SELECT q.quest_id, q.user_id, q.title, q.deadline, u.username 
            FROM quests q 
            JOIN users u ON q.user_id = u.user_id 
            WHERE q.deadline IS NOT NULL AND q.completed = FALSE
        ''')

        quests = cursor.fetchall()
        conn.close()

        notifications_sent = 0

        for quest in quests:
            quest_id, user_id, title, deadline_str, username = quest

            # –ü—Ä–æ–±—É–µ–º –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã
        try:
            deadline = datetime.strptime(deadline_str, "%Y-%m-%d %H:%M:%S")
        except ValueError:
            deadline = datetime.strptime(deadline_str, "%Y-%m-%d")

        try:
            time_diff = deadline - now
            
            # 1. –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –í –î–ï–ù–¨ –î–ï–î–õ–ê–ô–ù–ê (–µ—Å–ª–∏ –¥–µ–¥–ª–∞–π–Ω –Ω–µ —Å–µ–≥–æ–¥–Ω—è)
            if deadline.date() == now.date() and deadline > now:
                try:
                    await self.bot.send_message(
                        chat_id=user_id,
                        text=f"üìÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: —Å–µ–≥–æ–¥–Ω—è –¥–µ–¥–ª–∞–π–Ω –∫–≤–µ—Å—Ç–∞ '{title}'!\n" +
                            (f"‚è∞ –î–æ –∫–æ–Ω—Ü–∞: {deadline.strftime('%H:%M')}" if deadline.hour != 0 or deadline.minute != 0 else "")
                    )
                    notifications_sent += 1
                except Exception as e:
                    logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

            # 2. –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ó–ê 10 –ú–ò–ù–£–¢ –î–û –î–ï–î–õ–ê–ô–ù–ê
            if timedelta(minutes=0) <= time_diff <= timedelta(minutes=10):
                try:
                    minutes_left = int(time_diff.total_seconds() / 60)
                    await self.bot.send_message(
                        chat_id=user_id,
                        text=f"‚è∞ –°—Ä–æ—á–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞ –∫–≤–µ—Å—Ç–∞ '{title}' –æ—Å—Ç–∞–ª–æ—Å—å {minutes_left} –º–∏–Ω—É—Ç!"
                    )
                    notifications_sent += 1
                except Exception as e:
                    logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å 10-–º–∏–Ω—É—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {e}")

            # 3. –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –û –ü–†–û–°–†–û–ß–ö–ï
            if time_diff < timedelta(0):
                overdue_hours = abs(time_diff.total_seconds() / 3600)
                
                # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –≤—Ä–µ–º—è –∏ –ø—Ä–æ—à–ª–æ 2 —á–∞—Å–∞
                if (deadline.hour != 0 or deadline.minute != 0) and timedelta(hours=2) <= abs(time_diff) <= timedelta(hours=3):
                    try:
                        await self.bot.send_message(
                            chat_id=user_id,
                            text=f"‚ùå –ö–≤–µ—Å—Ç '{title}' –ø—Ä–æ—Å—Ä–æ—á–µ–Ω –Ω–∞ 2 —á–∞—Å–∞!"
                        )
                        notifications_sent += 1
                    except Exception as e:
                        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ—Å—Ä–æ—á–∫–µ: {e}")
                # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–æ–ª—å–∫–æ –¥–µ–Ω—å - —É–≤–µ–¥–æ–º–ª—è–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
                elif deadline.hour == 0 and deadline.minute == 0 and deadline.date() < now.date():
                    try:
                        await self.bot.send_message(
                            chat_id=user_id,
                            text=f"‚ùå –ö–≤–µ—Å—Ç '{title}' –ø—Ä–æ—Å—Ä–æ—á–µ–Ω! –î–µ–¥–ª–∞–π–Ω –±—ã–ª {deadline.strftime('%d.%m.%Y')}"
                        )
                        notifications_sent += 1
                    except Exception as e:
                        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ—Å—Ä–æ—á–∫–µ: {e}")
            
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–¥–ª–∞–π–Ω–∞ –∫–≤–µ—Å—Ç–∞ {quest_id}: {e}")

        return notifications_sent



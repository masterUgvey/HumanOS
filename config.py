"""
–ú–æ–¥—É–ª—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
"""

import os
from dotenv import load_dotenv
from loguru import logger

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()


class Config:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # Telegram Bot Token
    BOT_TOKEN: str = os.getenv('BOT_TOKEN', '')
    
    # Windsurf AI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    WINDSURF_API_KEY: str = os.getenv('WINDSURF_API_KEY', '')
    WINDSURF_API_URL: str = os.getenv('WINDSURF_API_URL', 'https://api.windsurf.ai/v1/chat/completions')
    
    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    DATABASE_PATH: str = os.getenv('DATABASE_PATH', 'quests.db')
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    LOG_LEVEL: str = os.getenv('LOG_LEVEL', 'INFO')
    
    # –¢–∏–ø—ã –∫–≤–µ—Å—Ç–æ–≤
    QUEST_TYPES = {
        "physical": "üí™ –§–∏–∑–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è",
        "intellectual": "üìö –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞",
        "mental": "üß† –ú–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞",
        "custom": "üéØ –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç"
    }
    # Timezone offset in minutes relative to UTC for user-local computations
    TZ_OFFSET_MINUTES: int = int(os.getenv('TZ_OFFSET_MINUTES', '0'))
    
    @classmethod
    def validate(cls) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        
        Returns:
            bool: True –µ—Å–ª–∏ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
        """
        if not cls.BOT_TOKEN:
            logger.error("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")
            return False
        
        logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        logger.info(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {cls.DATABASE_PATH}")
        logger.info(f"üîß –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {cls.LOG_LEVEL}")
        
        if cls.WINDSURF_API_KEY:
            logger.info("ü§ñ Windsurf AI: –ø–æ–¥–∫–ª—é—á–µ–Ω")
        else:
            logger.warning("‚ö†Ô∏è Windsurf AI: API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Ñ—É–Ω–∫—Ü–∏—è /quest –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)")
        
        return True


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = Config()
